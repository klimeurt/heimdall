version: '3.8'

volumes:
  shared-repos:
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/shared-repos
  elasticsearch-data:

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:9.0.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  # Initialize shared volume permissions
  init-volume:
    image: alpine:latest
    volumes:
      - ./shared-repos:/shared/heimdall-repos
    command: |
      sh -c "
        mkdir -p /shared/heimdall-repos &&
        chown -R 1000:1000 /shared/heimdall-repos &&
        chmod -R 755 /shared/heimdall-repos
      "

  collector:
    build:
      context: .
      dockerfile: deployments/collector/Dockerfile
    environment:
      - GITHUB_ORG=${GITHUB_ORG}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RUN_ON_STARTUP=true
      - GITHUB_PAGE_SIZE=100
      - GITHUB_API_DELAY_MS=500
      - COLLECTION_SCHEDULE=${COLLECTION_SCHEDULE:-0 0 * * 0}
    depends_on:
      - redis
    restart: unless-stopped

  cloner:
    build:
      context: .
      dockerfile: deployments/cloner/Dockerfile
    volumes:
      - ./shared-repos:/shared/heimdall-repos
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_CONCURRENT_CLONES=3
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - SHARED_VOLUME_DIR=/shared/heimdall-repos
    depends_on:
      - redis
      - init-volume
    restart: unless-stopped

  scanner:
    build:
      context: .
      dockerfile: deployments/scanner/Dockerfile
    volumes:
      - ./shared-repos:/shared/heimdall-repos
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_CONCURRENT_SCANS=3
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - SCAN_TIMEOUT_MINUTES=30
      - SHARED_VOLUME_DIR=/shared/heimdall-repos
      - PROCESSED_QUEUE_NAME=processed_queue
      - SECRETS_QUEUE_NAME=secrets_queue
      - CLEANUP_QUEUE_NAME=cleanup_queue
      - COORDINATOR_QUEUE_NAME=coordinator_queue
    depends_on:
      - redis
      - init-volume
    restart: unless-stopped

  indexer:
    build:
      context: .
      dockerfile: deployments/indexer/Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - INDEX_NAME=heimdall-secrets
      - VULNERABILITIES_INDEX_NAME=heimdall-vulnerabilities
      - SECRETS_QUEUE_NAME=secrets_queue
      - OSV_RESULTS_QUEUE_NAME=osv_results_queue
      - MAX_CONCURRENT_WORKERS=2
      - BULK_SIZE=50
      - BULK_FLUSH_INTERVAL=10s
    depends_on:
      redis:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  osv-scanner:
    build:
      context: .
      dockerfile: deployments/osv-scanner/Dockerfile
    volumes:
      - ./shared-repos:/shared/heimdall-repos
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_CONCURRENT_SCANS=2
      - SCAN_TIMEOUT_MINUTES=30
      - SHARED_VOLUME_DIR=/shared/heimdall-repos
      - OSV_QUEUE_NAME=osv_queue
      - OSV_RESULTS_QUEUE_NAME=osv_results_queue
      - COORDINATOR_QUEUE_NAME=coordinator_queue
    depends_on:
      - redis
      - init-volume
    restart: unless-stopped

  coordinator:
    build:
      context: .
      dockerfile: deployments/coordinator/Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - COORDINATOR_QUEUE_NAME=coordinator_queue
      - CLEANUP_QUEUE_NAME=cleanup_queue
      - JOB_TIMEOUT_MINUTES=60
      - STATE_CLEANUP_INTERVAL=5m
    depends_on:
      - redis
    restart: unless-stopped

  cleaner:
    build:
      context: .
      dockerfile: deployments/cleaner/Dockerfile
    volumes:
      - ./shared-repos:/shared/heimdall-repos
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CLEANUP_QUEUE_NAME=cleanup_queue
      - SHARED_VOLUME_DIR=/shared/heimdall-repos
      - MAX_CONCURRENT_JOBS=2
    depends_on:
      - redis
      - init-volume
    restart: unless-stopped
